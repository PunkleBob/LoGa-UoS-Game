
/*This script has been, partially or completely, generated by the GenerateVariableWindow*/
using UnityEngine;

namespace LoGaCulture.LUTE
{
    // <summary>
    /// Get or Set a property of a Sprite component
    /// </summary>
    [OrderInfo("Property",
                 "Sprite",
                 "Get or Set a property of a Sprite component")]
    [AddComponentMenu("")]
    public class SpriteProperty : BaseVariableProperty
    {
		//generated property
        public enum Property 
        { 
            PixelsPerUnit, 
            SpriteAtlasTextureScale, 
        }


        [SerializeField]
        protected Property property;

        [SerializeField]
        protected SpriteData spriteData;

        [SerializeField]
        [VariableProperty(typeof(FloatVariable))]
        protected Variable inOutVar;

        public override void OnEnter()
        {
            var iof = inOutVar as FloatVariable;


            var target = spriteData.Value;

            switch (getOrSet)
            {
                case GetSet.Get:
                    switch (property)
                    {
                        case Property.PixelsPerUnit:
                            iof.Value = target.pixelsPerUnit;
                            break;
                        case Property.SpriteAtlasTextureScale:
                            iof.Value = target.spriteAtlasTextureScale;
                            break;
                        default:
                            Debug.Log("Unsupported get or set attempted");
                            break;
                    }

                    break;

                case GetSet.Set:
                    switch (property)
                    {
                        default:
                            Debug.Log("Unsupported get or set attempted");
                            break;
                    }

                    break;

                default:
                    break;
            }

            spriteData.Value = target;

            Continue();
        }

        public override string GetSummary()
        {
            if (spriteData.Value == null)
            {
                return "Error: no sprite set";
            }
            if (inOutVar == null)
            {
                return "Error: no variable set to push or pull data to or from";
            }

            return getOrSet.ToString() + " " + property.ToString();
        }

        public override Color GetButtonColour()
        {
            return new Color32(235, 191, 217, 255);
        }

        public override bool HasReference(Variable variable)
        {
            if (spriteData.spriteRef == variable || inOutVar == variable)
                return true;

            return false;
        }
    }
}